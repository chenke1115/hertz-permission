basePath: /
definitions:
  github.com_chenke1115_hertz-permission_pkg_api_permission.RespInfo:
    properties:
      alias:
        type: string
      components:
        type: string
      created_at:
        type: string
      icon:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      pid:
        type: integer
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      type:
        type: string
      update_by:
        type: string
      update_time:
        type: string
      updated_at:
        type: string
      visible:
        type: integer
    type: object
  github.com_chenke1115_hertz-permission_pkg_api_permission.RespList:
    properties:
      data:
        items:
          $ref: '#/definitions/model.PermissionShow'
        type: array
      etime:
        description: 结束时间 example("2016-01-02 03:04:05")
        type: string
      limit:
        default: 10
        description: 单页限制 example(10)
        type: integer
      offset:
        default: 1
        description: 偏移量[页数] example(1)
        type: integer
      stime:
        description: 开始时间 example("2016-01-02 03:04:05")
        type: string
      total:
        type: integer
    type: object
  github.com_chenke1115_hertz-permission_pkg_api_role.RespInfo:
    properties:
      created_at:
        type: string
      creator_id:
        description: 创建者ID
        type: integer
      id:
        description: 角色ID
        type: integer
      is_del:
        description: '[0:正常 1:删除]'
        type: integer
      key:
        description: 角色标识[跟permission.key区分开]
        type: string
      name:
        description: 角色名称
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 角色状态[1:正常 0:停用]
        type: integer
      update_by:
        description: 最后操作人
        type: string
      update_time:
        type: string
      updated_at:
        type: string
    type: object
  github.com_chenke1115_hertz-permission_pkg_api_role.RespList:
    properties:
      data:
        items:
          $ref: '#/definitions/model.RoleShow'
        type: array
      etime:
        description: 结束时间 example("2016-01-02 03:04:05")
        type: string
      limit:
        default: 10
        description: 单页限制 example(10)
        type: integer
      offset:
        default: 1
        description: 偏移量[页数] example(1)
        type: integer
      stime:
        description: 开始时间 example("2016-01-02 03:04:05")
        type: string
      total:
        type: integer
    type: object
  github.com_chenke1115_hertz-permission_pkg_api_user.RespList:
    properties:
      data:
        items:
          $ref: '#/definitions/model.APIUser'
        type: array
      etime:
        description: 结束时间 example("2016-01-02 03:04:05")
        type: string
      limit:
        default: 10
        description: 单页限制 example(10)
        type: integer
      offset:
        default: 1
        description: 偏移量[页数] example(1)
        type: integer
      stime:
        description: 开始时间 example("2016-01-02 03:04:05")
        type: string
      total:
        type: integer
    type: object
  model.APIUser:
    properties:
      account:
        description: 登录账户
        type: string
      created_at:
        type: string
      customer_id:
        description: 客户ID
        type: integer
      id:
        type: integer
      name:
        description: 用户名
        type: string
      status:
        description: 用户状态
        type: integer
      updated_at:
        type: string
      user_id:
        description: 用户ID
        type: integer
    type: object
  model.CurrentUser:
    properties:
      account:
        description: 登陆账户
        type: string
      customer_id:
        description: 客户ID
        type: integer
      id:
        description: 用户信息ID
        type: integer
      name:
        description: 用户名
        type: string
      perkeys:
        description: 权限标识数组
        items:
          type: string
        type: array
      permissions:
        description: 权限数组
        items:
          $ref: '#/definitions/model.Permission'
        type: array
      roles:
        description: 角色数组
        items:
          type: string
        type: array
    type: object
  model.Permission:
    properties:
      alias:
        type: string
      components:
        type: string
      created_at:
        type: string
      icon:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      pid:
        type: integer
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      type:
        type: string
      update_by:
        type: string
      update_time:
        type: integer
      updated_at:
        type: string
      visible:
        type: integer
    type: object
  model.PermissionOption:
    properties:
      alias:
        type: string
      child:
        items:
          $ref: '#/definitions/model.PermissionOption'
        type: array
      id:
        type: integer
      name:
        type: string
      show:
        type: string
    type: object
  model.PermissionShow:
    properties:
      alias:
        type: string
      components:
        type: string
      created_at:
        type: string
      icon:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      pid:
        type: integer
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      type:
        type: string
      update_by:
        type: string
      update_time:
        type: string
      updated_at:
        type: string
      visible:
        type: integer
    type: object
  model.RoleOption:
    properties:
      id:
        description: 角色ID
        type: integer
      key:
        description: 角色标识
        type: string
      name:
        description: 角色名称
        type: string
    type: object
  model.RoleShow:
    properties:
      created_at:
        type: string
      creator_id:
        description: 创建者ID
        type: integer
      id:
        description: 角色ID
        type: integer
      is_del:
        description: '[0:正常 1:删除]'
        type: integer
      key:
        description: 角色标识[跟permission.key区分开]
        type: string
      name:
        description: 角色名称
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 角色状态[1:正常 0:停用]
        type: integer
      update_by:
        description: 最后操作人
        type: string
      update_time:
        description: 修改时间
        type: string
      updated_at:
        type: string
    type: object
  pkg_api_permission.RespInfo:
    properties:
      alias:
        type: string
      components:
        type: string
      created_at:
        type: string
      icon:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      pid:
        type: integer
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      type:
        type: string
      update_by:
        type: string
      update_time:
        type: string
      updated_at:
        type: string
      visible:
        type: integer
    type: object
  pkg_api_permission.RespList:
    properties:
      data:
        items:
          $ref: '#/definitions/model.PermissionShow'
        type: array
      etime:
        description: 结束时间 example("2016-01-02 03:04:05")
        type: string
      limit:
        default: 10
        description: 单页限制 example(10)
        type: integer
      offset:
        default: 1
        description: 偏移量[页数] example(1)
        type: integer
      stime:
        description: 开始时间 example("2016-01-02 03:04:05")
        type: string
      total:
        type: integer
    type: object
  pkg_api_role.RespInfo:
    properties:
      created_at:
        type: string
      creator_id:
        description: 创建者ID
        type: integer
      id:
        description: 角色ID
        type: integer
      is_del:
        description: '[0:正常 1:删除]'
        type: integer
      key:
        description: 角色标识[跟permission.key区分开]
        type: string
      name:
        description: 角色名称
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 角色状态[1:正常 0:停用]
        type: integer
      update_by:
        description: 最后操作人
        type: string
      update_time:
        type: string
      updated_at:
        type: string
    type: object
  pkg_api_role.RespList:
    properties:
      data:
        items:
          $ref: '#/definitions/model.RoleShow'
        type: array
      etime:
        description: 结束时间 example("2016-01-02 03:04:05")
        type: string
      limit:
        default: 10
        description: 单页限制 example(10)
        type: integer
      offset:
        default: 1
        description: 偏移量[页数] example(1)
        type: integer
      stime:
        description: 开始时间 example("2016-01-02 03:04:05")
        type: string
      total:
        type: integer
    type: object
  pkg_api_user.RespList:
    properties:
      data:
        items:
          $ref: '#/definitions/model.APIUser'
        type: array
      etime:
        description: 结束时间 example("2016-01-02 03:04:05")
        type: string
      limit:
        default: 10
        description: 单页限制 example(10)
        type: integer
      offset:
        default: 1
        description: 偏移量[页数] example(1)
        type: integer
      stime:
        description: 开始时间 example("2016-01-02 03:04:05")
        type: string
      total:
        type: integer
    type: object
  response.BaseResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  title: hertz-permission
  version: 1.0.0
paths:
  /api/auth/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This is an api to login
      parameters:
      - description: 密码[超管初始密码：Admin123!]【必填】 maxlength(32)
        in: formData
        name: password
        type: string
      - description: 用户名[超管初始账户：admin]【必填】 maxlength(32)
        in: formData
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: 登陆
      tags:
      - Auth【授权】
  /api/auth/logout:
    post:
      consumes:
      - application/json
      description: This is an api to logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 退出登陆
      tags:
      - Auth【授权】
  /api/auth/refresh_token:
    post:
      consumes:
      - application/json
      description: This is an api to refresh token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 刷新TOKEN
      tags:
      - Auth【授权】
  /api/permission/{id}/del:
    delete:
      consumes:
      - application/json
      description: This is a api to del permission
      parameters:
      - description: 权限ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 删除权限
      tags:
      - Permission【权限】
  /api/permission/{id}/edit:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: This is a api to edit permission
      parameters:
      - description: 权限ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      - description: 别名[允许中文，英文，数字，_]【必填】example("添加权限")
        in: formData
        name: alias
        type: string
      - description: 前端页面路径[类型为按钮可空]【必填】
        in: formData
        name: components
        type: string
      - description: 图标
        in: formData
        name: icon
        type: string
      - description: 权限全局标识[即后端路由，类型为目录可空]【必填】
        in: formData
        name: key
        type: string
      - description: 权限名称[允许英文，数字，.]【必填】example("permission.add")
        in: formData
        name: name
        type: string
      - default: 0
        description: 父级ID
        in: formData
        name: pid
        type: integer
      - description: 备注
        in: formData
        name: remark
        type: string
      - default: 0
        description: 排序[从小到大]
        in: formData
        name: sort
        type: integer
      - default: 1
        description: 菜单状态[1:正常 0:停用]
        in: formData
        name: status
        type: integer
      - description: 权限类型[D:目录;M:菜单;B:按钮]【必填】Enums("D", "M", "B")
        in: formData
        name: type
        type: string
      - default: 1
        description: 菜单状态[1:显示;0:隐藏]
        in: formData
        name: visible
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 修改权限
      tags:
      - Permission【权限】
  /api/permission/{id}/info:
    get:
      consumes:
      - application/json
      description: This is a api of permission info
      parameters:
      - description: 权限ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/github.com_chenke1115_hertz-permission_pkg_api_permission.RespInfo'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 权限详情
      tags:
      - Permission【权限】
  /api/permission/add:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This is a api to add permission
      parameters:
      - description: 别名[允许中文，英文，数字，_]【必填】example("添加权限")
        in: formData
        name: alias
        type: string
      - description: 前端页面路径[类型为按钮可空]【必填】
        in: formData
        name: components
        type: string
      - description: 图标
        in: formData
        name: icon
        type: string
      - description: 权限全局标识[即后端路由，类型为目录可空]【必填】
        in: formData
        name: key
        type: string
      - description: 权限名称[允许英文，数字，.]【必填】example("permission.add")
        in: formData
        name: name
        type: string
      - default: 0
        description: 父级ID
        in: formData
        name: pid
        type: integer
      - description: 备注
        in: formData
        name: remark
        type: string
      - default: 0
        description: 排序[从小到大]
        in: formData
        name: sort
        type: integer
      - default: 1
        description: 菜单状态[1:正常 0:停用]
        in: formData
        name: status
        type: integer
      - description: 权限类型[D:目录;M:菜单;B:按钮]【必填】Enums("D", "M", "B")
        in: formData
        name: type
        type: string
      - description: 菜单状态[1:显示;0:隐藏]
        in: formData
        name: visible
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 添加权限
      tags:
      - Permission【权限】
  /api/permission/list:
    get:
      consumes:
      - application/json
      description: This is a api of permission list
      parameters:
      - description: 前端路由
        in: query
        name: components
        type: string
      - description: 结束时间 example("2016-01-02 03:04:05")
        in: query
        name: etime
        type: string
      - description: 全局标识[后端路由]
        in: query
        name: key
        type: string
      - default: 10
        description: 单页限制 example(10)
        in: query
        name: limit
        type: integer
      - default: 1
        description: 偏移量[页数] example(1)
        in: query
        name: offset
        type: integer
      - description: 开始时间 example("2016-01-02 03:04:05")
        in: query
        name: stime
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/pkg_api_permission.RespList'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 权限列表
      tags:
      - Permission【权限】
  /api/permission/menu:
    get:
      consumes:
      - application/json
      description: This is a api of menu option. [选项键值就是上级菜单ID]
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 上级菜单下拉选项
      tags:
      - Permission【权限】
  /api/permission/option:
    get:
      consumes:
      - application/json
      description: This is a api of permission option
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.PermissionOption'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 权限下拉选项
      tags:
      - Permission【权限】
  /api/permission/route:
    get:
      consumes:
      - application/json
      description: This is a api of route option
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 路由下拉选项[未添加为权限的路由]
      tags:
      - Permission【权限】
  /api/role/{id}/bind:
    get:
      consumes:
      - application/json
      description: This is a api of bind permission for role
      parameters:
      - description: 角色ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  items:
                    type: integer
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 绑定权限数组
      tags:
      - Role【角色】
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This is a api to binding permission for role
      parameters:
      - description: 角色ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      - description: 权限ID数组【必填】example([1,2,3])
        in: formData
        items:
          type: integer
        name: permission_ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 绑定权限
      tags:
      - Role【角色】
  /api/role/{id}/del:
    delete:
      consumes:
      - application/json
      description: This is a api to del role
      parameters:
      - description: 角色ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 删除角色
      tags:
      - Role【角色】
  /api/role/{id}/edit:
    put:
      consumes:
      - application/json
      description: This is a api to edit role
      parameters:
      - description: 角色ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      - description: 角色标识【必填】
        in: formData
        name: key
        type: string
      - description: 角色名【必填】
        in: formData
        name: name
        type: string
      - description: 备注
        in: formData
        name: remark
        type: string
      - description: 角色状态[1:正常;0:停用]
        in: formData
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 编辑角色
      tags:
      - Role【角色】
  /api/role/{id}/info:
    get:
      consumes:
      - application/json
      description: This is a api of role info
      parameters:
      - description: 角色ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/github.com_chenke1115_hertz-permission_pkg_api_role.RespInfo'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 角色详情
      tags:
      - Role【角色】
  /api/role/add:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This is a api to add role
      parameters:
      - description: 角色标识【必填】 example(“SYS_ADMIN”)
        in: formData
        name: key
        type: string
      - description: 角色名【必填】 example(“系统管理员”)
        in: formData
        name: name
        type: string
      - description: 备注
        in: formData
        name: remark
        type: string
      - description: 角色状态[1:正常;0:停用]
        in: formData
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 添加角色
      tags:
      - Role【角色】
  /api/role/list:
    get:
      consumes:
      - application/json
      description: This is a api of role list
      parameters:
      - in: query
        name: created_at
        type: string
      - description: 创建者ID
        in: query
        name: creator_id
        type: integer
      - description: 结束时间 example("2016-01-02 03:04:05")
        in: query
        name: etime
        type: string
      - description: 角色ID
        in: query
        name: id
        type: integer
      - description: '[0:正常 1:删除]'
        in: query
        name: is_del
        type: integer
      - description: 角色标识[跟permission.key区分开]
        in: query
        name: key
        type: string
      - default: 10
        description: 单页限制 example(10)
        in: query
        name: limit
        type: integer
      - description: 角色名称
        in: query
        name: name
        type: string
      - default: 1
        description: 偏移量[页数] example(1)
        in: query
        name: offset
        type: integer
      - description: 备注
        in: query
        name: remark
        type: string
      - description: 角色状态[1:正常 0:停用]
        in: query
        name: status
        type: integer
      - description: 开始时间 example("2016-01-02 03:04:05")
        in: query
        name: stime
        type: string
      - description: 最后操作人
        in: query
        name: update_by
        type: string
      - description: 最后操作人
        in: query
        name: update_time
        type: integer
      - in: query
        name: updated_at
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/pkg_api_role.RespList'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 角色列表
      tags:
      - Role【角色】
  /api/role/option:
    get:
      consumes:
      - application/json
      description: This is a api of role option
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.RoleOption'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 角色下拉选项
      tags:
      - Role【角色】
  /api/user/{:id}/edit:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: This is a api to edit user
      parameters:
      - description: 用户ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      - description: 登陆账户 example("changge@ismart.com")
        in: formData
        name: account
        type: string
      - default: 0
        description: 关联客户账户ID
        in: formData
        name: customer_id
        type: integer
      - description: 用户名 example("长歌")
        in: formData
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 编辑用户
      tags:
      - User【用户】
  /api/user/{id}/assign:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This is a api to assign role for user
      parameters:
      - description: 账户ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      - description: 权限ID数组【必填】
        in: formData
        items:
          type: integer
        name: role_ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 角色分配
      tags:
      - User【用户】
  /api/user/{user_id}/reset:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: This is a api of reset user password
      parameters:
      - description: 用户列表返回的UserID
        example: 1
        in: path
        name: user_id
        required: true
        type: integer
      - description: 确认新密码【必填】example("Admin123#")
        in: formData
        name: confirm_password
        type: string
      - description: 旧密码【必填】example("Admin123!")
        in: formData
        name: old_password
        type: string
      - description: 新密码【必填】example("Admin123#")
        in: formData
        name: password
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 用户密码重置
      tags:
      - User【用户】
  /api/user/{user_id}/state:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: This is a api of edit user status
      parameters:
      - description: 用户列表返回的UserID
        example: 1
        in: path
        name: user_id
        required: true
        type: integer
      - description: 用户状态[1:启用 0:失效]【必填】
        in: formData
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 用户状态变更
      tags:
      - User【用户】
  /api/user/add:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This is a api to add user
      parameters:
      - description: 登陆账户【必填】example("changge@ismart.com")
        in: formData
        name: account
        type: string
      - default: 0
        description: 关联客户账户ID
        in: formData
        name: customer_id
        type: integer
      - description: 用户名【必填】 example("长歌")
        in: formData
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 添加用户
      tags:
      - User【用户】
  /api/user/current:
    get:
      consumes:
      - application/json
      description: This is an api to get current user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.CurrentUser'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 当前用户信息
      tags:
      - User【用户】
  /api/user/list:
    get:
      consumes:
      - application/json
      description: This is a api for user list
      parameters:
      - description: 登录账户
        in: query
        name: account
        type: string
      - in: query
        name: created_at
        type: string
      - description: 客户ID
        in: query
        name: customer_id
        type: integer
      - description: 结束时间 example("2016-01-02 03:04:05")
        in: query
        name: etime
        type: string
      - in: query
        name: id
        type: integer
      - default: 10
        description: 单页限制 example(10)
        in: query
        name: limit
        type: integer
      - description: 用户名
        in: query
        name: name
        type: string
      - default: 1
        description: 偏移量[页数] example(1)
        in: query
        name: offset
        type: integer
      - description: 用户状态
        in: query
        name: status
        type: string
      - description: 开始时间 example("2016-01-02 03:04:05")
        in: query
        name: stime
        type: string
      - in: query
        name: updated_at
        type: string
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/github.com_chenke1115_hertz-permission_pkg_api_user.RespList'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  type: object
              type: object
      security:
      - authorization: []
      summary: 用户列表
      tags:
      - User【用户】
schemes:
- http
securityDefinitions:
  authorization:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
